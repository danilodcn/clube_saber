name: Poetry CI

on:
  workflow_call:
    inputs:
      install-options:
        required: false
        type: string
        default: ''
      python-version:
        required: false
        type: string
        default: '3.10'
      lint:
        required: false
        type: boolean
        default: true
      test:
        required: false
        type: boolean
        default: true

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: 'postgres://postgres:postgres@0.0.0.0:5432/postgres'
    steps:
      - uses: actions/checkout@v2
      - name: Install and configure poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.in-project true

      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-build-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install the project dependencies
        run: poetry install ${{ inputs.install-options }}

      - name: Lint
        if: ${{ inputs.lint }}
        run: |
          poetry run task lint
      
      - name: Test
        if: ${{ inputs.test }}
        run: |
          echo 'fake test'
          # poetry run task test
